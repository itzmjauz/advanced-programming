Parser.java:11: error: type argument IdentifierInterface is not within bounds of type-variable K
  Map<IdentifierInterface, SetInterface<NaturalNumberInterface>> map;
      ^
  where K is a type-variable:
    K extends Data<K> declared in class Map
Parser.java:14: error: incompatible types: cannot infer type arguments for Map<>
    map = new Map<>();
                 ^
    reason: inference variable K has incompatible bounds
      equality constraints: IdentifierInterface
      upper bounds: Data<K>
  where K is a type-variable:
    K extends Data<K> declared in class Map
Parser.java:207: error: method removeIdentifier in interface SetInterface<E> cannot be applied to given types;
      copy.removeIdentifier();
          ^
  required: Data
  found: no arguments
  reason: actual and formal argument lists differ in length
  where E is a type-variable:
    E extends Data<E> declared in interface SetInterface
Parser.java:241: error: cannot find symbol
    new Identifiers().Start();
        ^
  symbol:   class Identifiers
  location: class Parser
Set.java:3: error: Set is not abstract and does not override abstract method clone() in Clonable
public class Set<E extends Data<E>> implements Clonable<SetInterface>, SetInterface {
       ^
Set.java:18: error: incompatible types: Data cannot be converted to E
      addIdentifier(set.getIdentifier());
                                     ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:19: error: method removeIdentifier in interface SetInterface<E> cannot be applied to given types;
      set.removeIdentifier();
         ^
  required: Data
  found: no arguments
  reason: actual and formal argument lists differ in length
  where E is a type-variable:
    E extends Data<E> declared in interface SetInterface
Set.java:23: error: array required, but SetInterface found
      set.addIdentifier(set[i]);
                           ^
Set.java:36: error: incompatible types: Data cannot be converted to E
    return set[size - 1];
              ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:39: error: name clash: addIdentifier(E#1) in Set and addIdentifier(E#2) in SetInterface have the same erasure, yet neither overrides the other
  public void addIdentifier(E identifier) {
              ^
  where E#1,E#2 are type-variables:
    E#1 extends Data<E#1> declared in class Set
    E#2 extends Data<E#2> declared in interface SetInterface
Set.java:46: error: name clash: removeIdentifier(E#1) in Set and removeIdentifier(E#2) in SetInterface have the same erasure, yet neither overrides the other
  public void removeIdentifier(E e) {
              ^
  where E#1,E#2 are type-variables:
    E#1 extends Data<E#1> declared in class Set
    E#2 extends Data<E#2> declared in interface SetInterface
Set.java:54: error: name clash: contains(E#1) in Set and contains(E#2) in SetInterface have the same erasure, yet neither overrides the other
  public boolean contains(E identifier) {
                 ^
  where E#1,E#2 are type-variables:
    E#1 extends Data<E#1> declared in class Set
    E#2 extends Data<E#2> declared in interface SetInterface
Set.java:66: error: name clash: difference(SetInterface<E#1>) in Set and difference(SetInterface<E#2>) in SetInterface have the same erasure, yet neither overrides the other
  public SetInterface<E> difference(SetInterface<E> set2) {
                         ^
  where E#1,E#2 are type-variables:
    E#1 extends Data<E#1> declared in class Set
    E#2 extends Data<E#2> declared in interface SetInterface
Set.java:70: error: incompatible types: Data cannot be converted to E
      if(!set2.contains(set[i])) {
                           ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:78: error: name clash: intersection(SetInterface<E>) in Set and intersection(SetInterface) in SetInterface have the same erasure, yet neither overrides the other
  public SetInterface<E> intersection(SetInterface<E> set2) {
                         ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:83: error: incompatible types: Data cannot be converted to E
      E identifier = copy.getIdentifier();
                                       ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:87: error: method removeIdentifier in interface SetInterface<E> cannot be applied to given types;
      copy.removeIdentifier();
          ^
  required: Data
  found: no arguments
  reason: actual and formal argument lists differ in length
  where E is a type-variable:
    E extends Data<E> declared in interface SetInterface
Set.java:93: error: name clash: union(SetInterface<E>) in Set and union(SetInterface) in SetInterface have the same erasure, yet neither overrides the other
  public SetInterface<E> union(SetInterface<E> set2) throws Exception {
                         ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:103: error: method removeIdentifier in interface SetInterface<E> cannot be applied to given types;
      copy.removeIdentifier();
          ^
  required: Data
  found: no arguments
  reason: actual and formal argument lists differ in length
  where E is a type-variable:
    E extends Data<E> declared in interface SetInterface
Set.java:109: error: name clash: symmetricDifference(SetInterface<E>) in Set and symmetricDifference(SetInterface) in SetInterface have the same erasure, yet neither overrides the other
  public SetInterface<E> symmetricDifference(SetInterface<E> set2) throws Exception {
                         ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:114: error: incompatible types: Data cannot be converted to E
      if(!set2.contains(set[i])) {
                           ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:122: error: incompatible types: Data cannot be converted to E
      identifier = copy.getIdentifier();
                                     ^
  where E is a type-variable:
    E extends Data<E> declared in class Set
Set.java:126: error: method removeIdentifier in interface SetInterface<E> cannot be applied to given types;
      copy.removeIdentifier();
          ^
  required: Data
  found: no arguments
  reason: actual and formal argument lists differ in length
  where E is a type-variable:
    E extends Data<E> declared in interface SetInterface
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
23 errors
